<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EC5.HttpModel</name>
    </assembly>
    <members>
        <member name="T:EC5.HttpModel.ByteArray">
            <summary>
            Byte 集合
            </summary>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.#ctor">
            <summary>
            (构造函数) Byte 集合
            </summary>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.#ctor(System.Byte[])">
            <summary>
            (构造函数) Byte 集合
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.Add(System.Byte)">
            <summary>
            添加一个字节
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.AddRange(System.Byte[])">
            <summary>
            添加字节集合
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.AddRange(System.Byte[],System.Int32)">
            <summary>
            添加字节集合
            </summary>
            <param name="collection"></param>
            <param name="count"></param>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.IndexOf(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.EndsWith(System.Byte[])">
            <summary>
            比较结尾是否相同
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.Clear">
            <summary>
            清空数组
            </summary>
        </member>
        <member name="P:EC5.HttpModel.ByteArray.Count">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.Sub(System.Int32,System.Int32)">
            <summary>
            删除指定字节，并返回删除的对象
            </summary>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.Remove(System.Int32,System.Int32)">
            <summary>
            删除指定字节，并返回删除的对象
            </summary>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.IndexOf(System.Byte[],System.Byte[])">
            <summary>
            查找
            </summary>
            <param name="data"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.IndexOf(System.Byte[],System.Byte)">
            <summary>
            查找
            </summary>
            <param name="data"></param>
            <param name="bit"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.IndexOf(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            查找
            </summary>
            <param name="data"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.Join(System.Byte[],System.Byte[])">
            <summary>
            合并
            </summary>
            <param name="inByte"></param>
            <param name="ownByte"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.ByteArray.Join(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            合并byte[]方法： 输入一个byte[]：inByte ,把它合并到自己的byte[] ownByte中去，再把它返回
            </summary>
            <param name="inByte"></param>
            <param name="ownByte"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
            <remarks>
            代码改进：ArrayCopy 可以改用为 System.Buffer.BlockCopy
            
            </remarks>
        </member>
        <member name="P:EC5.HttpModel.HiResTimer.MicroSeconds">
            <summary>
            返回当前微秒
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HiResTimer.MilliSecond">
            <summary>
            返回当前毫秒
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HtmlSite.HttpSite.m_Name">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HtmlSite.HttpSite.m_PhysicalPath">
            <summary>
            站点目录
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HtmlSite.HttpSite.Name">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HtmlSite.HttpSite.PhysicalPath">
            <summary>
            站点目录
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HtmlSite.HttpApplication.Application_AuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            步骤2
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EC5.HttpModel.HtmlSite.HttpApplication.Application_AuthorizeRequest(System.Object,System.EventArgs)">
            <summary>
            步骤3；当安全模块已经验证了当前用户的授权时执行 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EC5.HttpModel.HtmlSite.HttpApplication.Application_ResolveRequestCache(System.Object,System.EventArgs)">
            <summary>
            步骤4:当ASP.NET完成授权事件以使缓存模块从缓存中为请求提供服务时发生，从而跳过处理程序（页面或者是WebService）的执行。
            这样做可以改善网站的性能，这个事件还可以用来判断正文是不是从Cache中得到的。  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EC5.HttpModel.HtmlSite.HttpApplication.Application_AcquireRequestState(System.Object,System.EventArgs)">
            <summary>
            步骤5；读取了Session所需的特定信息并且在把这些信息填充到Session之前执行
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EC5.HttpModel.HtmlSite.HttpApplication.Application_PreRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            步骤6；在合适的处理程序执行请求前调用，
                   这个时候，Session就可以用了 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:EC5.HttpModel.HtmlSite.HttpApplication.Application_PostRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            步骤7.当处理程序完成对请求的处理后被调用
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:EC5.HttpModel.HttpBizServer">
            <summary>
            Http 业务服务器
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpBizServer.m_ConnectClients">
            <summary>
            链接但未处理的对象
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.EndRequest">
            <summary>
            页面结束请求, 触发的动作
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.MaxThread">
            <summary>
            最大处理线程数
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.#ctor">
            <summary>
            Http 业务服务器
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.Overtime">
            <summary>
            超时时间, 默认 30,000毫秒 = 30秒 
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpBizServer.ErrorLog">
            <summary>
            此事件是多线程事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.OnErrorLog">
            <summary>
            触发错误日志
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpBizServer.ServerClosed">
            <summary>
            关闭服务器触发的事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.OnServerClosed">
            <summary>
            关闭服务器触发的事件
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpBizServer.ServerOpen">
            <summary>
            打开服务器触发的事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.OnServerOpen">
            <summary>
            打开服务器触发的事件
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.CurProState">
            <summary>
            处理的流程
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.ClientClosedSID">
            <summary>
            客户端判断关闭,停止的
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.ProClientCloseSID">
            <summary>
            主线程
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.CoreTime">
            <summary>
            核心运转时间
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.WaitingCount">
            <summary>
            排队的数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.Security">
            <summary>
            权限设置
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.Port">
            <summary>
            本地监听端口
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.ProClient">
            <summary>
            处理数据包
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.ProClientOvertime">
            <summary>
            处理已经超时的链接
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.Start">
            <summary>
            开始服务器
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.ProDataPack">
            <summary>
            处理数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.ProClientExits">
            <summary>
            处理退出的用户
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpBizServer.ClientCount">
            <summary>
            客户数量
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.GetStatus">
            <summary>
            链接状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.ProClientNews">
            <summary>
            处理新登录的用户
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpBizServer.m_IsDisponsed">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpBizServer.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:EC5.HttpModel.HttpClient">
            <summary>
            网络客户端（独立运行）
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_InputCount">
            <summary>
            接受到的字节数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_OuputCount">
            <summary>
            发送的字节数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_CurInputCount">
            <summary>
            当前数据接收的数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_CurOuputCount">
            <summary>
            当前数据发送的数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_PackSeq">
            <summary>
            发送数据包的序号
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_Stream">
            <summary>
            数据流
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_DateStart">
            <summary>
            启动链接的时间
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_HeaderStr">
            <summary>
            Header 的字符串
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_HttpRequest">
            <summary>
            请求的对象，以后改进
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_Form">
            <summary>
            获取客户提交过来的Form数据
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_RequestContent">
            <summary>
            请求的内容
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_RemoteIP">
            <summary>
            远程IP
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_RemotePort">
            <summary>
            远程端口
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_AutoSend">
            <summary>
            自动发送
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_Boundary">
            <summary>
            边界.配合 multipart/form-data; 数据提交
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_RequestBuffer">
            <summary>
            临时接受的缓冲区
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_RequestData">
            <summary>
            接收的数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.#ctor(System.Net.Sockets.Socket)">
            <summary>
            服务器端的客户
            </summary>
            <param name="socket"></param>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.RequestContent">
            <summary>
            接收到的数据内容
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Files">
            <summary>
            上传的文件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.GetRequestHeader(System.String)">
            <summary>
            获取 Header
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Form">
            <summary>
            用户提交的表单信息
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_LastSendTime">
            <summary>
            最后发送和接收数据的日期
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.TSock">
            <summary>
            原始 Socket 对象
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Status">
            <summary>
            Http 流程状态
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.IsEnded">
            <summary>
            是否已经结束
            </summary>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ResponseEnd">
            <summary>
            结束
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_UserType">
            <summary>
            用户自定义的类型
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_CloseTime">
            <summary>
            准备关闭的开始时间
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_IsPreClose">
            <summary>
            是否预备关闭
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpClient.Closed">
            <summary>
            断开连接触发的事件
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpClient.Opening">
            <summary>
            打开连接后，触发的事件
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.IsPreClose">
            <summary>
            预备关闭
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.InputCount">
            <summary>
            接收到的字节数
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.CurInputCount">
            <summary>
            当前接收到的数据
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.CurOuputCount">
            <summary>
            当前发送的数据量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.OuputCount">
            <summary>
            发送的数据量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.UserType">
            <summary>
            用户自定义类型
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_Config">
            <summary>
            部分参数配置
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.ResponseStatus">
            <summary>
            反馈的状态码
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.ResponseStatusText">
            <summary>
            反馈的状态消息
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.HasItems">
            <summary>
            是否存在 items
            </summary>
            <returns></returns>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Items">
            <summary>
            标记集合
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.HttpModule">
            <summary>
            默认模块
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.CurThread">
            <summary>
            当前运行的线程
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.LastSendTime">
            <summary>
            最后发送和接收数据的时间
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.#ctor">
            <summary>
            网络客户端
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.#ctor(System.Net.HttpWebRequest)">
            <summary>
            网络客户端
            </summary>
            <param name="hwRequest"></param>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.HttpMethods">
            <summary>
            Http 函数方式
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.RemoteIP">
            <summary>
            远程IP
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.RemotePort">
            <summary>
            远程端口
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.AddError(System.Exception)">
            <summary>
            添加错误信息
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Errors">
            <summary>
            错误信息集合
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_ClosedSID">
            <summary>
            关闭的流程状态
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.IsClosed">
            <summary>
            判断客户是否已经断开连接
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.Close">
            <summary>
            关闭服务器
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.SendBufferData">
            <summary>
            发送缓冲区数据(发送字节)
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.HTTP_100_CONTINUE">
            <summary>
            HTTP/1.1 100 Continue
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ProExpect_Options">
            <summary>
            发现有 OPTIONS 请求...
            </summary>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.HasError">
            <summary>
            判断错误
            </summary>
            <returns></returns>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Overtime">
            <summary>
            超时时间(单位：毫秒）
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.PreRecvHeaders(EC5.HttpModel.HttpClient)">
            <summary>
            接收 Header 的数据
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ProRequestData">
            <summary>
            处理缓冲数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.EndRequest(System.Action{EC5.HttpModel.HttpClient})">
            <summary>
            http 结束触发的事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="F:EC5.HttpModel.HttpClient.m_ValidHttpMethod">
            <summary>
            验证请求头
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ProRequest_Header">
            <summary>
            处理 Header 数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ForceClose(System.String)">
            <summary>
            强制关闭
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Expect100Continue">
            <summary>
            特殊标记. POST 提交二进制数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ProRequest_HeaderEnd">
            <summary>
            转换为 Header 对象
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.PreRequestCookie(System.Net.HttpWebRequest,System.String)">
            <summary>
            处理 Cookie
            </summary>
            <param name="request"></param>
            <param name="text"></param>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Cookies">
            <summary>
            Cookie 集合
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Headers">
            <summary>
            头部未解析的字符串
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EC5.HttpModel.HttpClient.GetFormLines(EC5.HttpModel.ByteArray)" -->
        <member name="M:EC5.HttpModel.HttpClient.ProRequest_XWwwFormUrlencoded(EC5.HttpModel.ByteArray)">
            <summary>
            处理 x-www-form-urlencoded 协议
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EC5.HttpModel.HttpClient.ProRequest_MultipartFD_Items(EC5.HttpModel.ByteArray)" -->
        <member name="M:EC5.HttpModel.HttpClient.ProRequest_MultipartFD_Item(System.Byte[],System.Collections.Specialized.NameValueCollection,EC5.HttpModel.HttpFileCollection)">
            <summary>
            处理文件提交的数据
            </summary>
            <param name="data"></param>
            <param name="formList"></param>
            <param name="files"></param>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ProRequest_Multipart_FormData(EC5.HttpModel.ByteArray,EC5.HttpModel.HttpFileCollection)">
            <summary>
            处理 Multipart/from-data
            </summary>
            <param name="data"></param>
            <param name="files">文件集合类</param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.ProRequest_Content">
            <summary>
            处理 POST 接收到的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.GetBufferData">
            <summary>
            获取缓冲区的数据
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient._RequestData">
            <summary>
            接收到的数据
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.Guid">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.Close(System.Int32)">
            <summary>
            特点秒数后，自动关闭
            </summary>
            <param name="timeout">毫秒</param>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.CloseTime">
            <summary>
            关闭时间,配合 IsPreClose  属性使用
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClient.SentDataCount">
            <summary>
            发送的数据量
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.IsDisposed">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpClient.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:EC5.HttpModel.HttpClientConfig">
            <summary>
            客户端配置
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.Default">
            <summary>
            默认配置
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.ParseContentEnabled">
            <summary>
            激活解析 ParseContent 内容
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.MaxHeaderDataLen">
            <summary>
            Header 数据区最大长度
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.MaxHeaderCount">
            <summary>
            Header 最大数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.MinHeaderCount">
            <summary>
            最小的数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.Overtime_ProHeaderData">
            <summary>
             处理 header 数据超时。毫秒
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.MaxPostTimeout">
            <summary>
            最大 Post 超时时间.毫秒
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.Overtime_ProContentData">
            <summary>
            处理 ContentData 内容超时.毫秒
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpClientConfig.ExecBodyCoroutine">
            <summary>
            执行 Body , 采用  协程模式激活
            </summary>
        </member>
        <member name="T:EC5.HttpModel.HttpClientStatus">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClientStatus.None">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClientStatus.RequestHeader">
            <summary>
            获取 Request Header 
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClientStatus.RequestHeaderEnd">
            <summary>
            获取 Request Header 
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClientStatus.RequestContent">
            <summary>
            处理请求的正文
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClientStatus.Response">
            <summary>
            
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpClientStatus.End">
            <summary>
            结束
            </summary>
        </member>
        <member name="T:EC5.HttpModel.HttpCookie">
            <summary>
            Http Cookie 对象
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpCookie.#ctor(System.String)">
            <summary>
            (构造函数) Http Cookie 对象
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:EC5.HttpModel.HttpCookie.#ctor(System.String,System.String)">
            <summary>
            (构造函数) Http Cookie 对象
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="T:EC5.HttpModel.HttpFileCollection">
            <summary>
            Post 上传的文件集合
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpFileCollection.Add(System.String,EC5.HttpModel.HttpPostedFile)">
            <summary>
            添加
            </summary>
            <param name="name"></param>
            <param name="file"></param>
        </member>
        <member name="T:EC5.HttpModel.HttpModuleManager">
            <summary>
            http 模块管理
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpModuleManager.m_PageTypes">
            <summary>
            模块集合
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpModuleManager.AddModel(EC5.HttpModel.IHttpModule)">
            <summary>
            添加模块
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:EC5.HttpModel.HttpModuleManager.AddPageType(System.Type)">
            <summary>
            模块集合
            </summary>
            <param name="pageT">页类型</param>
        </member>
        <member name="M:EC5.HttpModel.HttpModuleManager.ExecPage(EC5.HttpModel.HttpClient)">
            <summary>
            执行页面代码
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:EC5.HttpModel.HttpModuleManager.Exec(EC5.HttpModel.HttpClient)">
            <summary>
            执行
            </summary>
            <param name="client"></param>
        </member>
        <member name="T:EC5.HttpModel.HttpPostedFile">
            <summary>
            Post 上来的文件对象
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpPostedFile.ContentLength">
            <summary>
            获取上载文件的大小（以字节为单位）。
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpPostedFile.ContentType">
            <summary>
            获取客户端发送的文件的 MIME 内容类型。
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpPostedFile.FileName">
            <summary>
            获取客户端上的文件的完全限定名称。
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpPostedFile.InputStream">
            <summary>
            获取一个 System.IO.Stream 对象，该对象指向一个上载文件，以准备读取该文件的内容。
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpPostedFile.SaveAs(System.String)">
            <summary>
            保存上载文件的内容。
            </summary>
            <param name="filename"></param>
        </member>
        <member name="T:EC5.HttpModel.HttpSecurity">
            <summary>
            IP 权限
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpSecurity.m_IPAddressBlackList">
            <summary>
            IP 黑名单
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpSecurity.m_IPAddressWhiteList">
            <summary>
            IP 白名单
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpSecurity.StopCount">
            <summary>
            阻止的数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpSecurity.Mode">
            <summary>
            IP 安全模式
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpSecurity.IPAddressBlackList">
            <summary>
            IP 黑名单
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpSecurity.IPAddressWhiteList">
            <summary>
            IP 白名单的
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpSecurity.IsStop(System.String)">
            <summary>
            判断是否阻止
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:EC5.HttpModel.HttpServerBase">
            <summary>
            服务器
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_ListenerPort">
            <summary>
            监听端口
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_TcpListener">
            <summary>
            监听
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_IsListener">
            <summary>
            是否监听
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_Clients">
            <summary>
            
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_IsLogNews">
            <summary>
            记录新建
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_IsLogExits">
            <summary>
            记录退出的
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_ClientNews">
            <summary>
            新添加的用户
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_ClientExits">
            <summary>
            新退出的用户
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_Status">
            <summary>
            服务器状态
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_Secuirty">
            <summary>
            安全权限
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_Overtime">
            <summary>
            超时(单位: 毫秒)。默认 30 秒 
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_CoreTime">
            <summary>
            处理的时间
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_CoroScheduler">
            <summary>
            携程
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.MaxThread">
            <summary>
            最大线程数
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpServerBase.ClientConnect">
            <summary>
            用户链接的事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.OnClientConnect(EC5.HttpModel.HttpClient)">
            <summary>
            触发用户链接的事件
            </summary>
            <param name="client"></param>
        </member>
        <member name="E:EC5.HttpModel.HttpServerBase.ClientClose">
            <summary>
            用户链接关闭的事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.OnClientClose(EC5.HttpModel.HttpClient)">
            <summary>
            触发用户链接关闭的事件
            </summary>
            <param name="client"></param>
        </member>
        <member name="E:EC5.HttpModel.HttpServerBase.ServerClosed">
            <summary>
            关闭服务器触发的事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.OnServerClosed">
            <summary>
            关闭服务器触发的事件
            </summary>
        </member>
        <member name="E:EC5.HttpModel.HttpServerBase.ServerOpen">
            <summary>
            打开服务器触发的事件
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.OnServerOpen">
            <summary>
            打开服务器触发的事件
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_IsProData">
            <summary>
            处理数据
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_ThreadData">
            <summary>
            获取并处理数据的线程
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.HttpModule">
            <summary>
            
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.HttpMethods">
            <summary>
            服务器能处理的方法
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.CoreTime">
            <summary>
            核心运转时间
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.Overtime">
            <summary>
            超时时间.(单位: 毫秒).默认30000毫秒
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.Security">
            <summary>
            安全权限
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.IsLogNews">
            <summary>
            是否记录新连接的用户
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.Status">
            <summary>
            服务器状态
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_DoProState">
            <summary>
            状态
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.DoProClientData">
            <summary>
            主线程处理数据
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.ListenerPort">
            <summary>
            监听端口
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.LocalIPAddress">
            <summary>
            本地ip 地址
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.#ctor">
            <summary>
            服务器的构造方法
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.Listener">
            <summary>
            监听
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.OnBeginAcceptSocket(System.IAsyncResult)">
            <summary>
            接收连接
            </summary>
            <param name="async"></param>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.StartProClientData">
            <summary>
            开始处理用户数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.StopProClientData">
            <summary>
            停止处理用户数据
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.ClientClosedSID">
            <summary>
            客户端判断关闭,停止的
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_ItemsDelecing">
            <summary>
            准备删除的临时集合
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerBase.m_CloseTBomb2">
            <summary>
            
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.ProClientClose">
            <summary>
            处理已经断开链接的客户（一秒钟检查一次）
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.WaitLink">
            <summary>
            等待连接
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.Listener(System.Int32)">
            <summary>
            监听
            </summary>
            <param name="port"></param>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.StopListener">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.Dispose">
            <summary>
            系统自动释放资源
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.ClientNews">
            <summary>
            新添加的用户
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.ClientExist">
            <summary>
            新退出的用户
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.Clients">
            <summary>
            客户端集合
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.ClientCount">
            <summary>
            客户数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerBase.WaitingCount">
            <summary>
            排队的数量
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.PreRecvHeaders(EC5.HttpModel.HttpClient)">
            <summary>
            接收 Header 的数据
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.ProRequestData_ForClient(System.Object)">
            <summary>
            处理客户数据
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerBase.GetClient(System.Guid)">
            <summary>
            获取链接的客户端
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="T:EC5.HttpModel.HttpServerStatus">
            <summary>
            服务器状态
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerStatus.m_ForceClosesCount">
            <summary>
            强制关闭
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerStatus.m_CurClientCount">
            <summary>
            当前连接的数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerStatus.m_ClosedAllCount">
            <summary>
            关闭是数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerStatus.m_ConnAllCount">
            <summary>
            连接成功的数量
            </summary>
        </member>
        <member name="F:EC5.HttpModel.HttpServerStatus.m_BlackListCount">
            <summary>
            阻止的黑名单
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.BlackListCount">
            <summary>
            黑名单数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.ForceClosesCount">
            <summary>
            强制关闭
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.CurClientCount">
            <summary>
            当前连接的数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.ClosedAllCount">
            <summary>
            关闭的总数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.ConnAllCount">
            <summary>
            连接的总数量
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.ByteInputCount">
            <summary>
            输入的字节数
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpServerStatus.ByteOuputCount">
            <summary>
            输出的字节数
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpServerStatus.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="T:EC5.HttpModel.HttpSiteModule">
            <summary>
            站点管理模块
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpSiteModule.Exec(EC5.HttpModel.HttpClient)">
            <summary>
            设置请求对象
            </summary>
            <param name="client">网路客户端</param>
        </member>
        <member name="M:EC5.HttpModel.HttpSiteModule.ExecCoroutine(EC5.HttpModel.HttpClient)">
            <summary>
            协程接口
            </summary>
            <param name="cleint"></param>
            <returns></returns>
        </member>
        <member name="T:EC5.HttpModel.HttpTagCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:EC5.HttpModel.HttpTagCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:EC5.HttpModel.HttpTime">
            <summary>
            定义一个高精度的时间类
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.QueryPerformanceFrequency(System.Int64@)">
            <summary>
            获取时间的精度
            </summary>
            <param name="PerformanceFrequency"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.QueryPerformanceCounter(System.Int64@)">
            <summary>
            获取时间计数
            </summary>
            <param name="PerformanceCount"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.#ctor">
            <summary>
            new
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.Reset">
            <summary>
            重置时间相关计数器
            </summary>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.GetTime">
            <summary>
            获取当前与最近一次 reset 时间差
            </summary>
            <returns>The time since last reset.</returns>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.GetAbsoluteTime">
            <summary>
            获取当前系统的时间 ticks 数
            </summary>
            <returns>The current time in seconds.</returns>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.GetAbsoluteTime2">
            <summary>
            获取当前系统的时间 ticks 数
            </summary>
            <returns>The current time in seconds.</returns>
        </member>
        <member name="M:EC5.HttpModel.HttpTime.GetElapsedTime">
            <summary>
            获取此次与上次调用此方法的两次时间差
            </summary>
            <returns>The number of seconds since last call of this function.</returns>
        </member>
        <member name="T:EC5.HttpModel.IHttpModule">
            <summary>
            Http 模块
            </summary>
        </member>
        <member name="M:EC5.HttpModel.IHttpModule.Exec(EC5.HttpModel.HttpClient)">
            <summary>
            执行
            </summary>
            <param name="client">网络客户端</param>
        </member>
        <member name="M:EC5.HttpModel.IHttpModule.ExecCoroutine(EC5.HttpModel.HttpClient)">
            <summary>
            执行协程
            </summary>
            <param name="cleint">网络客户端</param>
            <returns></returns>
        </member>
        <member name="T:EC5.HttpModel.IPAddressSecurityMode">
            <summary>
            IP 地址权限模式
            </summary>
        </member>
        <member name="F:EC5.HttpModel.IPAddressSecurityMode.BlackList_WhiteList">
            <summary>
            黑名单 和 白名单公用
            </summary>
        </member>
        <member name="F:EC5.HttpModel.IPAddressSecurityMode.BlackList">
            <summary>
            只限制黑名单访问
            </summary>
        </member>
        <member name="F:EC5.HttpModel.IPAddressSecurityMode.WhiteList">
            <summary>
            只运行白名单通信
            </summary>
        </member>
        <member name="T:EC5.HttpModel.IPage">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="T:EC5.HttpModel.IpUtil">
            <summary>
            
            </summary>
        </member>
        <member name="T:EC5.HttpModel.IPAddressRangeList">
            <summary>
            IP 地址集合
            </summary>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Contains(System.Byte[])">
            <summary>
            判断IP 是否存在
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Contains(System.String)">
            <summary>
            判断IP 是否存在
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Contains(System.UInt32)">
            <summary>
            判断IP 是否存在
            </summary>
            <param name="ipLong"></param>
            <returns></returns>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Add(System.String)">
            <summary>
            添加单个 IP
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Add(System.String,System.String)">
            <summary>
            添加 IP 段
            </summary>
            <param name="ipStart">起始 IP</param>
            <param name="ipEnd">结束 IP</param>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Clear">
            <summary>
            清理
            </summary>
        </member>
        <member name="P:EC5.HttpModel.IPAddressRangeList.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRangeList.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EC5.HttpModel.IPAddressRange">
            <summary>
            IP 段
            </summary>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRange.#ctor">
            <summary>
            IP 段
            </summary>
        </member>
        <member name="M:EC5.HttpModel.IPAddressRange.#ctor(System.UInt32)">
            <summary>
            IP 段
            </summary>
            <param name="ip"></param>
        </member>
        <member name="P:EC5.HttpModel.IPAddressRange.Tag">
            <summary>
            自定义标签
            </summary>
        </member>
        <member name="P:EC5.HttpModel.IPAddressRange.IsSingle">
            <summary>
            是否单一 IP
            </summary>
        </member>
        <member name="P:EC5.HttpModel.IPAddressRange.IPStart">
            <summary>
            起始 IP
            </summary>
        </member>
        <member name="P:EC5.HttpModel.IPAddressRange.IPEnd">
            <summary>
            结尾 IP
            </summary>
        </member>
        <member name="T:EC5.HttpModel.SessionState.HttpSessionState">
            <summary>
            Session 状态
            </summary>
        </member>
        <member name="F:EC5.HttpModel.TimeBombType.Span">
            <summary>
            间隔
            </summary>
        </member>
        <member name="F:EC5.HttpModel.TimeBombType.One">
            <summary>
            一次性
            </summary>
        </member>
        <member name="T:EC5.HttpModel.TimeBomb">
            <summary>
            时间炸弹(时间间隔触发器)
            </summary>
        </member>
        <member name="M:EC5.HttpModel.TimeBomb.#ctor(System.Int64)">
            <summary>
            (构造函数) 时间炸弹(时间间隔触发器)
            </summary>
            <param name="span"></param>
        </member>
        <member name="M:EC5.HttpModel.TimeBomb.#ctor(System.Int64,EC5.HttpModel.TimeBombType)">
            <summary>
            (构造函数) 时间炸弹(时间间隔触发器)
            </summary>
            <param name="span"></param>
        </member>
        <member name="P:EC5.HttpModel.TimeBomb.Span">
            <summary>
            时间间隔(毫秒)
            </summary>
        </member>
        <member name="M:EC5.HttpModel.TimeBomb.Start">
            <summary>
            开始
            </summary>
        </member>
        <member name="M:EC5.HttpModel.TimeBomb.GetExcessTime">
            <summary>
            获取剩余时间
            </summary>
        </member>
        <member name="F:EC5.HttpModel.TList`1.m_NotNull">
            <summary>
            允许空项目
            </summary>
        </member>
        <member name="P:EC5.HttpModel.TList`1.NotNull">
            <summary>
            不能为空
            </summary>
        </member>
        <member name="T:EC5.HttpModel.WebPostEncType">
            <summary>
            MIME 编码
            </summary>
        </member>
    </members>
</doc>
